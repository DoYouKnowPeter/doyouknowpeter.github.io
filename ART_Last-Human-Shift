<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Last Human Shift</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
            font-family: 'JetBrains Mono', monospace;
            overflow-x: hidden;
            min-height: 100vh;
            position: relative;
        }
        
        .container {
            position: relative;
            width: 100%;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }
        
        .title {
            font-size: clamp(2rem, 8vw, 6rem);
            font-weight: 700;
            text-align: center;
            margin-bottom: 3rem;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
            background-size: 400% 400%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: gradientShift 8s ease-in-out infinite;
            text-shadow: 0 0 30px rgba(255, 107, 107, 0.5);
        }
        
        .main-visual {
            position: relative;
            width: 100%;
            max-width: 1200px;
            height: 600px;
            margin-bottom: 3rem;
            perspective: 1000px;
        }
        
        .human-silhouette {
            position: absolute;
            left: 10%;
            top: 50%;
            transform: translateY(-50%);
            width: 200px;
            height: 400px;
            background: linear-gradient(45deg, #ff6b6b, #feca57);
            clip-path: polygon(40% 0%, 60% 0%, 65% 15%, 70% 25%, 75% 35%, 80% 50%, 75% 65%, 70% 75%, 65% 85%, 60% 100%, 40% 100%, 35% 85%, 30% 75%, 25% 65%, 20% 50%, 25% 35%, 30% 25%, 35% 15%);
            animation: humanPulse 3s ease-in-out infinite;
            filter: drop-shadow(0 0 20px rgba(255, 107, 107, 0.7));
            z-index: 10;
        }
        
        .ai-grid {
            position: absolute;
            right: 10%;
            top: 50%;
            transform: translateY(-50%);
            width: 300px;
            height: 300px;
            display: grid;
            grid-template-columns: repeat(6, 1fr);
            gap: 4px;
            animation: aiExpansion 4s ease-in-out infinite;
        }
        
        .ai-cell {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 2px;
            animation: cellFlicker 2s ease-in-out infinite;
            filter: drop-shadow(0 0 5px rgba(102, 126, 234, 0.5));
        }
        
        .ai-cell:nth-child(odd) {
            animation-delay: 0.5s;
        }
        
        .bridge {
            position: absolute;
            left: 25%;
            top: 50%;
            width: 50%;
            height: 2px;
            background: linear-gradient(90deg, transparent 0%, #ff6b6b 50%, transparent 100%);
            transform: translateY(-50%);
            animation: bridgeFlow 3s ease-in-out infinite;
        }
        
        .floating-words {
            position: absolute;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }
        
        .word {
            position: absolute;
            font-size: 0.8rem;
            color: rgba(255, 255, 255, 0.6);
            animation: wordFloat 15s linear infinite;
            opacity: 0;
        }
        
        .obsolete { color: #ff6b6b; }
        .automate { color: #667eea; }
        .human { color: #4ecdc4; }
        .value { color: #feca57; }
        
        .poetry {
            max-width: 800px;
            text-align: center;
            line-height: 2;
            font-size: 1.1rem;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 2rem;
            animation: textGlow 4s ease-in-out infinite;
        }
        
        .poetry .highlight {
            color: #ff6b6b;
            font-weight: 700;
            text-shadow: 0 0 10px rgba(255, 107, 107, 0.5);
        }
        
        .glitch-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent 0%, rgba(255, 0, 0, 0.1) 50%, transparent 100%);
            animation: glitchSweep 8s ease-in-out infinite;
            pointer-events: none;
            z-index: 100;
        }
        
        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }
        
        @keyframes humanPulse {
            0%, 100% { 
                transform: translateY(-50%) scale(1);
                filter: drop-shadow(0 0 20px rgba(255, 107, 107, 0.7));
            }
            50% { 
                transform: translateY(-50%) scale(1.05);
                filter: drop-shadow(0 0 30px rgba(255, 107, 107, 1));
            }
        }
        
        @keyframes aiExpansion {
            0%, 100% { transform: translateY(-50%) scale(1) rotateY(0deg); }
            50% { transform: translateY(-50%) scale(1.1) rotateY(10deg); }
        }
        
        @keyframes cellFlicker {
            0%, 100% { opacity: 0.8; }
            50% { opacity: 1; }
        }
        
        @keyframes bridgeFlow {
            0% { 
                background: linear-gradient(90deg, transparent 0%, transparent 100%);
                opacity: 0;
            }
            50% { 
                background: linear-gradient(90deg, transparent 0%, #ff6b6b 50%, transparent 100%);
                opacity: 1;
            }
            100% { 
                background: linear-gradient(90deg, transparent 0%, transparent 100%);
                opacity: 0;
            }
        }
        
        @keyframes wordFloat {
            0% { 
                opacity: 0;
                transform: translateY(100vh) rotate(0deg);
            }
            10% { opacity: 0.7; }
            90% { opacity: 0.7; }
            100% { 
                opacity: 0;
                transform: translateY(-100vh) rotate(360deg);
            }
        }
        
        @keyframes textGlow {
            0%, 100% { text-shadow: 0 0 5px rgba(255, 255, 255, 0.3); }
            50% { text-shadow: 0 0 20px rgba(255, 255, 255, 0.6); }
        }
        
        @keyframes glitchSweep {
            0%, 100% { transform: translateX(-100%); opacity: 0; }
            50% { transform: translateX(100%); opacity: 0.3; }
        }
        
        @media (max-width: 768px) {
            .main-visual {
                height: 400px;
            }
            
            .human-silhouette {
                width: 120px;
                height: 240px;
            }
            
            .ai-grid {
                width: 180px;
                height: 180px;
            }
            
            .poetry {
                font-size: 0.9rem;
                padding: 0 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="title">THE LAST HUMAN SHIFT</h1>
        
        <div class="main-visual">
            <div class="human-silhouette"></div>
            <div class="bridge"></div>
            <div class="ai-grid" id="aiGrid"></div>
            
            <div class="floating-words" id="floatingWords"></div>
        </div>
        
        <div class="poetry">
            We stand at the precipice of our own making,<br>
            Where <span class="highlight">flesh and algorithm converge</span>.<br>
            The skills we honed, the trades we mastered,<br>
            Dissolve like morning mist before the <span class="highlight">silicon dawn</span>.<br><br>
            
            Yet in this sterile symphony of efficiency,<br>
            Something <span class="highlight">irreplaceable</span> stirsâ€”<br>
            The trembling hand that holds the brush,<br>
            The heart that bleeds into the canvas,<br>
            The <span class="highlight">beautiful imperfection</span> of being human.<br><br>
            
            When machines can mimic every craft,<br>
            Perhaps they'll hunger most<br>
            For what they <span class="highlight">cannot replicate</span>:<br>
            The soul's fingerprint on creation.
        </div>
    </div>
    
    <div class="glitch-overlay"></div>
    
    <script>
        // Generate AI grid cells
        const aiGrid = document.getElementById('aiGrid');
        for (let i = 0; i < 36; i++) {
            const cell = document.createElement('div');
            cell.className = 'ai-cell';
            cell.style.animationDelay = `${Math.random() * 2}s`;
            aiGrid.appendChild(cell);
        }
        
        // Generate floating words
        const words = ['OBSOLETE', 'AUTOMATE', 'HUMAN', 'VALUE', 'REPLACE', 'CREATE', 'SOUL', 'MACHINE'];
        const wordClasses = ['obsolete', 'automate', 'human', 'value', 'obsolete', 'human', 'human', 'automate'];
        const floatingWords = document.getElementById('floatingWords');
        
        function createFloatingWord() {
            const word = document.createElement('div');
            const randomIndex = Math.floor(Math.random() * words.length);
            word.textContent = words[randomIndex];
            word.className = `word ${wordClasses[randomIndex]}`;
            word.style.left = Math.random() * 100 + '%';
            word.style.animationDelay = Math.random() * 5 + 's';
            word.style.animationDuration = (10 + Math.random() * 10) + 's';
            floatingWords.appendChild(word);
            
            setTimeout(() => {
                if (word.parentNode) {
                    word.parentNode.removeChild(word);
                }
            }, 15000);
        }
        
        // Create floating words periodically
        setInterval(createFloatingWord, 2000);
        
        // Initial words
        for (let i = 0; i < 5; i++) {
            setTimeout(createFloatingWord, i * 1000);
        }
        
        // Add subtle mouse interaction
        document.addEventListener('mousemove', (e) => {
            const humanSilhouette = document.querySelector('.human-silhouette');
            const mouseX = e.clientX / window.innerWidth;
            const rotation = (mouseX - 0.5) * 10;
            humanSilhouette.style.transform = `translateY(-50%) rotateY(${rotation}deg)`;
        });
    </script>
</body>
</html>
